{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Timoni","text":"<p>Timoni is a package manager for Kubernetes, powered by CUE and inspired by Helm.</p> <p>The Timoni project strives to improve the UX of authoring Kubernetes configs. Instead of mingling Go templates with YAML like Helm, or layering YAML on top of each-other like Kustomize, Timoni relies on cuelang's type safety, code generation and data validation features to offer a better experience of creating, packaging and delivering apps to Kubernetes.</p> <p>Development phase</p> <p>Timoni in under active development and is still in its infancy. The APIs and interfaces may change in a backwards incompatible manner.</p>"},{"location":"#concepts","title":"Concepts","text":""},{"location":"#timoni-modules","title":"Timoni Modules","text":"<p>A Timoni module contains a set of CUE definitions and constraints organised into a CUE module with an opinionated structure. A module accepts a set of values supplied by the user as <code>values.cue</code> files, and outputs a set of Kubernetes objects that Timoni deploys on Kubernetes.</p> <p>Module structure: <pre><code>\u251c\u2500\u2500 cue.mod\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gen # Kubernetes types\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 module.cue # Module metadata\n\u251c\u2500\u2500 templates\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.cue # Config schema and default values\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 deployment.cue # Kubernetes Deployment template\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 service.cue # Kubernetes Service template\n\u251c\u2500\u2500 timoni.cue # Timoni entry point\n\u2514\u2500\u2500 values.cue # Timoni values placeholder\n</code></pre></p> <p>Module example</p> <p>An example module can be found in Timoni's repository at examples/podinfo. The example module is published to GitHub Container Registry and is publicly available at ghcr.io/stefanprodan/modules/podinfo.</p> <p>Commands for working with local modules:</p> <ul> <li><code>timoni mod init &lt;module-name&gt;</code></li> <li><code>timoni mod lint &lt;path/to/module&gt;</code></li> <li><code>timoni build &lt;name&gt; &lt;path/to/module&gt; -n &lt;namespace&gt;</code></li> <li><code>timoni apply &lt;name&gt; &lt;path/to/module&gt; -f &lt;path/to/values.cue&gt; --dry-run --diff</code></li> </ul>"},{"location":"#oci-artifacts","title":"OCI Artifacts","text":"<p>Timoni modules are distributed as OCI artifacts and can be stored in container registries which support custom OCI media types. Modules are versioned using strict semantic versioning, the version of a module is used as the OCI artifact tag.</p> <p>Commands for working with remote modules:</p> <ul> <li><code>timoni mod push &lt;path/to/module&gt; oci://&lt;module-url&gt; -v &lt;semver&gt;</code></li> <li><code>timoni mod pull oci://&lt;module-url&gt; -v &lt;semver&gt; -o &lt;path/to/module&gt;</code></li> <li><code>timoni mod list oci://&lt;module-url&gt;</code></li> </ul> <p>Timoni produces artifacts compatible with Docker Hub, GitHub Container Registry, Azure Container Registry, Amazon Elastic Container Registry, Google Artifact Registry, self-hosted Docker Registry and others.</p>"},{"location":"#timoni-instances","title":"Timoni Instances","text":"<p>A Timoni instance represent a module instantiation on a Kubernetes cluster. A module can be installed multiple times on a cluster by giving its instances unique names per namespace.</p> <p>When instantiating a module, users can supply their own <code>values.cue</code> that gets merged with the defaults included in the module:</p> <pre><code>values: {\n    ingress: {\n        enabled:   true\n        className: \"nginx\"\n        host:      \"app.example.com\"\n    }\n    autoscaling: enabled: true\n    monitoring: enabled:  true\n}\n</code></pre> <p>Commands for working with module instances:</p> <ul> <li><code>timoni install &lt;name&gt; oci://&lt;module-url&gt; -v &lt;semver&gt; -n &lt;namespace&gt;</code></li> <li><code>timoni upgrade &lt;name&gt; oci://&lt;module-url&gt; -v &lt;semver&gt; -f &lt;path/to/values.cue&gt;</code></li> <li><code>timoni uninstall &lt;name&gt; -n &lt;namespace&gt;</code></li> <li><code>timoni list -n &lt;namespace&gt;</code></li> <li><code>timoni inspect [module|values|resources] &lt;name&gt; -n &lt;namespace&gt;</code></li> <li><code>timoni status &lt;name&gt; -n &lt;namespace&gt;</code></li> </ul> <p>The <code>install</code> and <code>upgrade</code> commands are aliases of <code>timoni apply</code>. To apply the Kubernetes resources belonging to a module instance, Timoni uses Kubernetes server-side apply and Flux's drift detection.</p> <p>The apply command validates all resources with a dry-run apply, and reconciles only the ones with changes to the cluster state.</p> <p>To recreate immutable resources such as Kubernetes Jobs, these resources can be annotated with <code>action.timoni.sh/force: \"enabled\"</code>.</p> <p>Timoni's garbage collector keeps track of the applied resources and prunes the Kubernetes objects that were previously applied but are missing from the current revision.</p> <p>To prevent Timoni's garbage collector from deleting certain resources such as Kubernetes Persistent Volumes, these resources can be annotated with <code>action.timoni.sh/prune: \"disabled\"</code>.</p> <p>After an installation or upgrade, Timoni waits for the applied resources to be fully reconciled by checking the ready status of deployments, jobs, services, ingresses, and Kubernetes custom resources.</p>"},{"location":"#timoni-bundles","title":"Timoni Bundles","text":"<p>Timoni bundles offer a declarative way of managing the lifecycle of applications and their infra dependencies.</p> <p>A Timoni bundle is a CUE file for defining a group of instances together with their values and module references:</p> <pre><code>bundle: {\n    apiVersion: \"v1alpha1\"\n    name:       \"podinfo\"\n    instances: {\n        redis: {\n            module: {\n                url:     \"oci://ghcr.io/stefanprodan/modules/redis\"\n                version: \"7.0.9\"\n            }\n            namespace: \"podinfo\"\n            values: maxmemory: 256\n        }\n        podinfo: {\n            module: url:     \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n            module: version: \"6.3.4\"\n            namespace: \"podinfo\"\n            values: caching: {\n                enabled:  true\n                redisURL: \"tcp://redis:6379\"\n            }\n        }\n    }\n}\n</code></pre> <p>For deterministic operations, it is possible to pin a module version by its OCI digest:</p> <pre><code>redis: {\n    module: {\n        url:     \"oci://ghcr.io/stefanprodan/modules/redis\"\n        digest:  \"sha256:e9137d41b0d263bfaf2a43fc862648ad9dc3a976b4b0fc6e27617ea28ee27d45\"\n    }\n}\n</code></pre> <p>Bundle example</p> <p>An example bundle can be found in Timoni's repository at examples/bundles/podinfo.cue. This bundle defines a Redis master-replica cluster and a podinfo instance connected to the Redis instance. The secret values are defined in a separate file which can be kept encrypted or pulled from a secure vault at apply time.</p> <p>In the bundle files you can use arithmetic operations, string interpolation and everything else that CUE std lib supports.</p> <p>Commands for working with bundles:</p> <ul> <li><code>timoni bundle lint -f bundle.cue</code></li> <li><code>timoni bundle apply -f bundle.cue -f bundle_extras.cue --dry-run --diff</code></li> <li><code>timoni bundle delete -f bundle.cue -f bundle_extras.cue</code></li> <li><code>timoni bundle build -f bundle.cue -f bundle_extras.cue</code></li> </ul> <p>To learn more about bundles, please see the Bundle API documentation.</p>"},{"location":"#license","title":"License","text":"<p>Timoni is Apache 2.0 licensed and accepts contributions via GitHub pull requests.</p>"},{"location":"bundles/","title":"Bundles","text":"<p>Timoni bundles offer a declarative way of managing the lifecycle of applications and their infra dependencies.</p> <p>A Timoni bundle is a CUE file for defining a group of instances together with their values and module references.</p>"},{"location":"bundles/#example","title":"Example","text":"<p>The following is an example of a Bundle that defines a Redis master-replica cluster and a podinfo instance connected to the Redis instance.</p> <pre><code>bundle: {\n    apiVersion: \"v1alpha1\"\n    name:       \"podinfo\"\n    instances: {\n        redis: {\n            module: {\n                url:     \"oci://ghcr.io/stefanprodan/modules/redis\"\n                version: \"7.0.12\"\n            }\n            namespace: \"podinfo\"\n            values: maxmemory: 256\n        }\n        podinfo: {\n            module: url:     \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n            module: version: \"6.3.5\"\n            namespace: \"podinfo\"\n            values: caching: {\n                enabled:  true\n                redisURL: \"tcp://redis:6379\"\n            }\n        }\n    }\n}\n</code></pre> <p>For the above example, Timoni performs the following actions at apply time:</p> <ul> <li>Validates that the Bundle definition is in conformance with the API version specified by <code>apiVersion</code>.</li> <li>For each instance, it fetches the module version from the registry using the <code>module.url</code>   as the artifact repository address and the <code>module.version</code> as the artifact tag.</li> <li>Creates the Kubernetes namespaces if they don't exist.</li> <li>For each instance, it builds, validates and creates the Kubernetes resources using the specified <code>values</code>.</li> <li>The list of managed resources along with the module reference and values are stored in the cluster in a   Kubernetes Secret, in the same namespace with the instance.</li> <li>If an instance already exists, Timoni performs a server-side apply dry-run to detect changes and   applies only the resources with divergent state.</li> <li>If previously applied resources are missing from the current revision, these   resources are deleted from the cluster.</li> <li>Waits for each instance's resources to become ready.</li> </ul> <p>You can run this example by saving the Bundle into <code>podinfo.bundle.cue</code>.</p> <p>Apply the Bundle on the cluster:</p> commandoutput <pre><code>timoni bundle apply -f podinfo.bundle.cue\n</code></pre> <pre><code>applying instance redis\npulling oci://ghcr.io/stefanprodan/modules/redis:7.0.12\nusing module timoni.sh/redis version 7.0.12\ninstalling redis in namespace podinfo\nNamespace/podinfo created\napplying master\nServiceAccount/podinfo/redis created\nConfigMap/podinfo/redis created\nService/podinfo/redis created\nDeployment/podinfo/redis-master created\nPersistentVolumeClaim/podinfo/redis-master created\nwaiting for 5 resource(s) to become ready...\nresources are ready\napplying replica\nService/podinfo/redis-readonly created\nDeployment/podinfo/redis-replica created\nwaiting for 2 resource(s) to become ready...\nresources are ready\napplying instance podinfo\npulling oci://ghcr.io/stefanprodan/modules/podinfo:6.3.5\nusing module timoni.sh/podinfo version 6.3.5\ninstalling podinfo in namespace podinfo\nServiceAccount/podinfo/podinfo created\nService/podinfo/podinfo created\nDeployment/podinfo/podinfo created\nwaiting for 3 resource(s) to become ready...\nresources are ready\n</code></pre> <p>Build the Bundle and print the resulting Kubernetes resources for all of the Bundle's instances:</p> commandoutput <pre><code>timoni bundle build -f podinfo.bundle.cue\n</code></pre> <pre><code>---\n# Instance: redis\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\nlabels:\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis\nnamespace: podinfo\n---\napiVersion: v1\ndata:\nredis.conf: |\n  maxmemory 256mb\n  maxmemory-policy allkeys-lru\n\n  dir /data\n  save \"\"\n  appendonly yes\n\n  protected-mode no\n  rename-command CONFIG \"\"\nkind: ConfigMap\nmetadata:\nlabels:\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis\nnamespace: podinfo\n---\napiVersion: v1\nkind: Service\nmetadata:\nlabels:\n  app.kubernetes.io/name: redis-master\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis\nnamespace: podinfo\nspec:\nports:\n- name: redis\n  port: 6379\n  protocol: TCP\n  targetPort: redis\nselector:\n  app.kubernetes.io/name: redis-master\ntype: ClusterIP\n---\napiVersion: v1\nkind: Service\nmetadata:\nlabels:\n  app.kubernetes.io/name: redis-replica\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis-readonly\nnamespace: podinfo\nspec:\nports:\n- name: redis\n  port: 6379\n  protocol: TCP\n  targetPort: redis\nselector:\n  app.kubernetes.io/name: redis-replica\ntype: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nlabels:\n  app.kubernetes.io/name: redis-master\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis-master\nnamespace: podinfo\nspec:\nselector:\n  matchLabels:\n    app.kubernetes.io/name: redis-master\nstrategy:\n  type: Recreate\ntemplate:\n  metadata:\n    labels:\n      app.kubernetes.io/name: redis-master\n  spec:\n    containers:\n    - command:\n      - redis-server\n      - /redis-master/redis.conf\n      image: cgr.dev/chainguard/redis@sha256:9cdc90a57fa0cc23dce9a934313cc5412a3b8415a60e79797ee9cb4ca04a3968\n      imagePullPolicy: IfNotPresent\n      livenessProbe:\n        initialDelaySeconds: 2\n        tcpSocket:\n          port: redis\n        timeoutSeconds: 2\n      name: redis\n      ports:\n      - containerPort: 6379\n        name: redis\n        protocol: TCP\n      readinessProbe:\n        exec:\n          command:\n          - redis-cli\n          - ping\n        initialDelaySeconds: 2\n        timeoutSeconds: 5\n      resources:\n        limits:\n          memory: 288Mi\n        requests:\n          memory: 64Mi\n      securityContext:\n        allowPrivilegeEscalation: false\n        capabilities:\n          drop:\n          - ALL\n        readOnlyRootFilesystem: true\n        runAsNonRoot: true\n        seccompProfile:\n          type: RuntimeDefault\n      volumeMounts:\n      - mountPath: /data\n        name: data\n      - mountPath: /redis-master\n        name: config\n    securityContext:\n      fsGroup: 1001\n      runAsGroup: 1001\n      runAsUser: 1001\n    serviceAccountName: redis\n    volumes:\n    - name: data\n      persistentVolumeClaim:\n        claimName: redis-master\n    - configMap:\n        items:\n        - key: redis.conf\n          path: redis.conf\n        name: redis\n      name: config\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nlabels:\n  app.kubernetes.io/name: redis-replica\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis-replica\nnamespace: podinfo\nspec:\nreplicas: 1\nselector:\n  matchLabels:\n    app.kubernetes.io/name: redis-replica\nstrategy:\n  type: RollingUpdate\ntemplate:\n  metadata:\n    labels:\n      app.kubernetes.io/name: redis-replica\n  spec:\n    containers:\n    - command:\n      - redis-server\n      - --replicaof\n      - redis.podinfo.svc.cluster.local\n      - \"6379\"\n      - --include\n      - /redis-replica/redis.conf\n      image: cgr.dev/chainguard/redis@sha256:9cdc90a57fa0cc23dce9a934313cc5412a3b8415a60e79797ee9cb4ca04a3968\n      imagePullPolicy: IfNotPresent\n      livenessProbe:\n        initialDelaySeconds: 2\n        tcpSocket:\n          port: redis\n        timeoutSeconds: 2\n      name: redis\n      ports:\n      - containerPort: 6379\n        name: redis\n        protocol: TCP\n      readinessProbe:\n        exec:\n          command:\n          - redis-cli\n          - ping\n        initialDelaySeconds: 2\n        timeoutSeconds: 5\n      resources:\n        limits:\n          memory: 288Mi\n        requests:\n          memory: 64Mi\n      securityContext:\n        allowPrivilegeEscalation: false\n        capabilities:\n          drop:\n          - ALL\n        readOnlyRootFilesystem: true\n        runAsNonRoot: true\n        seccompProfile:\n          type: RuntimeDefault\n      volumeMounts:\n      - mountPath: /data\n        name: data\n      - mountPath: /redis-replica\n        name: config\n    securityContext:\n      fsGroup: 1001\n      runAsGroup: 1001\n      runAsUser: 1001\n    serviceAccountName: redis\n    volumes:\n    - emptyDir: {}\n      name: data\n    - configMap:\n        items:\n        - key: redis.conf\n          path: redis.conf\n        name: redis\n      name: config\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nlabels:\n  app.kubernetes.io/part-of: redis\n  app.kubernetes.io/version: 7.0.12\nname: redis-master\nnamespace: podinfo\nspec:\naccessModes:\n- ReadWriteOnce\nresources:\n  requests:\n    storage: 8Gi\nstorageClassName: standard\n\n---\n# Instance: podinfo\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\nlabels:\n  app.kubernetes.io/name: podinfo\n  app.kubernetes.io/version: 6.3.5\nname: podinfo\nnamespace: podinfo\n---\napiVersion: v1\nkind: Service\nmetadata:\nlabels:\n  app.kubernetes.io/name: podinfo\n  app.kubernetes.io/version: 6.3.5\nname: podinfo\nnamespace: podinfo\nspec:\nports:\n- name: http\n  port: 80\n  protocol: TCP\n  targetPort: http\nselector:\n  app.kubernetes.io/name: podinfo\ntype: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nlabels:\n  app.kubernetes.io/name: podinfo\n  app.kubernetes.io/version: 6.3.5\nname: podinfo\nnamespace: podinfo\nspec:\nreplicas: 1\nselector:\n  matchLabels:\n    app.kubernetes.io/name: podinfo\ntemplate:\n  metadata:\n    labels:\n      app.kubernetes.io/name: podinfo\n  spec:\n    containers:\n    - command:\n      - ./podinfo\n      - --level=info\n      - --cache-server=tcp://redis:6379\n      image: ghcr.io/stefanprodan/podinfo:6.3.5\n      imagePullPolicy: IfNotPresent\n      livenessProbe:\n        httpGet:\n          path: /healthz\n          port: http\n      name: podinfo\n      ports:\n      - containerPort: 9898\n        name: http\n        protocol: TCP\n      readinessProbe:\n        httpGet:\n          path: /readyz\n          port: http\n    serviceAccountName: podinfo\n</code></pre> <p>List the instances in Bundle <code>podinfo</code> across all namespaces:</p> commandoutput <pre><code>timoni list --bundle podinfo -A\n</code></pre> <pre><code>NAME    NAMESPACE         MODULE                                          VERSION LAST APPLIED          BUNDLE\npodinfo podinfo           oci://ghcr.io/stefanprodan/modules/podinfo      6.3.5   2023-07-10T16:20:07Z  podinfo\nredis   podinfo           oci://ghcr.io/stefanprodan/modules/redis        7.0.12  2023-07-10T16:20:00Z  podinfo\n</code></pre> <p>List the instance resources and their rollout status:</p> commandoutput <pre><code>timoni status redis -n podinfo\n</code></pre> <pre><code>ServiceAccount/podinfo/redis Current Resource is current\nConfigMap/podinfo/redis Current Resource is always ready\nService/podinfo/redis Current Service is ready\nService/podinfo/redis-readonly Current Service is ready\nDeployment/podinfo/redis-master Current Deployment is available. Replicas: 1\nDeployment/podinfo/redis-replica Current Deployment is available. Replicas: 1\nPersistentVolumeClaim/podinfo/redis-master Current PVC is Bound\n</code></pre> <p>See an instance module reference and its digest:</p> commandoutput <pre><code>timoni inspect module redis -n podinfo\n</code></pre> <pre><code>name: timoni.sh/redis\nrepository: oci://ghcr.io/stefanprodan/modules/redis\nversion: 7.0.12\ndigest: sha256:7fcb6f6918902c0dedc2ba4545fbdeca119a04644a53400af15b977e3921c600\n</code></pre>"},{"location":"bundles/#writing-a-bundle-spec","title":"Writing a Bundle spec","text":"<p>A Bundle file must contain a definition that matches the following schema:</p> <pre><code>#Bundle: {\n    apiVersion: string\n    name: string\n    instances: [string]: {\n        module: {\n            url:     string\n            digest?: string\n            version: *\"latest\" | string\n        }\n        namespace: string\n        values: {...}\n    }\n}\n</code></pre> <p>Bundle files can contain arithmetic operations, string interpolation and everything else that CUE std lib supports.</p>"},{"location":"bundles/#api-version","title":"API version","text":"<p>The <code>apiVersion</code> is a required field that specifies the version of the Bundle schema.</p> <p>Currently, the only supported value is <code>v1alpha1</code>.</p>"},{"location":"bundles/#name","title":"Name","text":"<p>The <code>name</code> is a required field used to track the ownership of instances deployed to a Kubernetes cluster.</p> <p>Note that Bundles should have unique names per cluster, using the same name for different bundles will result in ownership conflict.</p>"},{"location":"bundles/#instances","title":"Instances","text":"<p>The <code>instances</code> array is a required field that specifies the list of Instances part of this Bundle.</p> <p>A Bundle must contain at least one instance with the following required fields:</p> <pre><code>bundle: {\n    apiVersion: \"v1alpha1\"\n    name: \"podinfo\"\n    instances: {\n        podinfo: {\n            module: url: \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n            namespace: \"podinfo\"\n        }\n    }\n}\n</code></pre>"},{"location":"bundles/#instance-module","title":"Instance Module","text":"<p>The <code>instance.module</code> is a required field that specifies the OCI URL, version and/or digest of the instance's module.</p>"},{"location":"bundles/#url","title":"URL","text":"<p>The <code>instance.module.url</code> is a required field that specifies the OCI repository address where the module is published. The <code>url</code> field must be in the format <code>oci://&lt;registry-host&gt;/&lt;repo-name&gt;</code>.</p>"},{"location":"bundles/#version","title":"Version","text":"<p>The <code>instance.module.version</code> is an optional field that specifies the version number of the module. The version number must follow Timoni's semantic versioning. When not specified, the version defaults to <code>latest</code>, which pulls the module OCI artifact tagged as latest.</p> <pre><code>module: {\n    url: \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n    version: \"6.3.5\"\n}\n</code></pre> <p>Default version</p> <p>When not specified, the version defaults to <code>latest</code>, which pulls the module OCI artifact tagged as latest. Note that using <code>version: \"latest\"</code> is not recommended for production system, unless you also specify a digest.  </p>"},{"location":"bundles/#digest","title":"Digest","text":"<p>The <code>instance.module.digest</code> is an optional field that specifies the OCI digest of the module.</p> <pre><code>module: {\n    url:    \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n    digest: \"sha256:5c3fd5ef3cdc9d742091ddc1e2546084369069ea96a076c33c1f51374a8d6325\"\n}\n</code></pre> <p>When both the version number and the digest are specified, Timoni will verify that the upstream digest of the version matches the specified <code>instance.module.digest</code>.</p> <pre><code>module: {\n    url:    \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n    version: \"6.3.5\"\n    digest: \"sha256:5c3fd5ef3cdc9d742091ddc1e2546084369069ea96a076c33c1f51374a8d6325\"\n}\n</code></pre> <p>If the version is set to <code>latest</code> and a digest is specified, Timoni will ignore the version and will pull the module by its OCI digest.</p>"},{"location":"bundles/#instance-namespace","title":"Instance Namespace","text":"<p>The <code>instance.module</code> is a required field that specifies the Kubernetes namespace where the instance is created.</p> <p>If the specified namespace does not exist, Timoni will first create the namespace, then it will apply the instance's resources in that namespace.</p>"},{"location":"bundles/#instance-values","title":"Instance Values","text":"<p>The <code>instance.values</code> is an optional field that specifies custom values used to configure the instance.</p> <p>At apply time, Timoni merges the custom values with the defaults, validates the final values against the config schema and creates the instance.</p>"},{"location":"bundles/#values-from-environment-variables","title":"Values from environment variables","text":"<p>The <code>@timoni(env:[string|number|bool]:[ENV_VAR_NAME])</code> CUE attribute can be placed next to a field to set its value from the environment.</p> <pre><code>values: {\n    host:    \"example.com\" @timoni(env:string:MY_HOST)\n    enabled: true          @timoni(env:bool:MY_ENABLED)\n    score:   1             @timoni(env:number:MY_SCORE)\n}\n</code></pre> <p>To make an environment variable required, the field value can be set to its type:</p> <pre><code>values: {\n    host:    string @timoni(env:string:MY_HOST)\n    enabled: bool   @timoni(env:bool:MY_ENABLED)\n    score:   int    @timoni(env:number:MY_SCORE)\n}\n</code></pre> <p>At apply time, Timoni injects the fields values from the environment, if a specified env var is not found and if a default is not provided, the build operation with fail with an <code>incomplete value</code> error.</p>"},{"location":"bundles/#working-with-bundles","title":"Working with Bundles","text":""},{"location":"bundles/#install-and-upgrade","title":"Install and Upgrade","text":"<p>To install or upgrade the instances defined in a Bundle file, you can use the <code>timoni bundle apply</code> command.</p> <p>Example:</p> <pre><code>timoni bundle apply -f bundle.cue\n</code></pre> <p>The apply command performs the following actions for each instance:</p> <ul> <li>Pulls the module version from the specified container registry.</li> <li>If the registry is private, uses the credentials found in <code>~/.docker/config.json</code>.</li> <li>If the registry credentials are specified with <code>--creds</code>, these take priority over the docker ones.</li> <li>Merges the custom values supplied in the Bundle with the default values found in the module.</li> <li>Builds the module by passing the instance name, namespace and values.</li> <li>Labels the resulting Kubernetes resources with the instance name and namespace.</li> <li>Creates the instance namespace if it doesn't exist.</li> <li>Applies the Kubernetes resources on the cluster.</li> <li>Creates or updates the instance inventory with the last applied resources IDs.</li> </ul>"},{"location":"bundles/#diff-upgrade","title":"Diff Upgrade","text":"<p>After editing a bundle file, you can review the changes that will be made on the cluster with <code>timoni bundle apply --diff</code>.</p> <p>Example:</p> <pre><code>timoni bundle apply --dry-run --diff -f bundle.cue\n</code></pre>"},{"location":"bundles/#force-upgrade","title":"Force Upgrade","text":"<p>If an upgrade contains changes to immutable fields, such as changing the image tag of a Kubernetes Job, you need to set the <code>--force</code> flag.</p> <p>Example:</p> <pre><code>timoni bundle apply --force -f bundle.cue\n</code></pre> <p>With <code>--force</code>, Timoni will recreate only the resources that contain changes to immutable fields.</p>"},{"location":"bundles/#transfer-ownership","title":"Transfer ownership","text":"<p>If an install or upgrade involves Instances already created, either separately or as a part of another Bundle, the operation will fail. To transfer ownership to the current Bundle, you need to set the <code>--overwrite-ownership</code> flag.</p> <p>Example:</p> <pre><code>timoni bundle apply --overwrite-ownership -f bundle.cue\n</code></pre>"},{"location":"bundles/#inject-values-from-environment-variables","title":"Inject values from environment variables","text":"<p>To inject values from environment variables, you can add CUE attributes next to fields in the format <code>@timoni(env:[string|number|bool]:[ENV_VAR_NAME])</code>.</p> <p>Example:</p> <pre><code>registry: \"my-registry.com/my-org\" @timoni(env:string:APP_REGISTRY)\n\nbundle: {\n    apiVersion: \"v1alpha1\"\n    name:       \"my-apps\"\n    instances: {\n        \"app\": {\n            module: {\n                url:     \"oci://\\(registry)/modules/app\"\n                version: \"1.0.0\" @timoni(env:string:APP_VER)\n            }\n            values: {\n                // required string (can be multi-line)\n                sshKey: string @timoni(env:string:SSH_KEY)\n                // optional boolean (defaults to false)\n                isAdmin: false @timoni(env:bool:IS_ADMIN)\n                // required number\n                age: int @timoni(env:number:AGE)\n            }\n        }\n    }\n}\n</code></pre> <p>Export the env vars and run the <code>timoni bundle apply</code> command.</p> <pre><code>EXPORT APP_REGISTRY=\"localhost:5050\"\nEXPORT SSH_KEY=$(cat .ssh/id_ecdsa.pub)\nEXPORT IS_ADMIN=\"true\"\nEXPORT AGE=\"41\"\n\ntimoni bundle apply -f bundle.cue\n</code></pre>"},{"location":"bundles/#build","title":"Build","text":"<p>To build the instances defined in a Bundle file and print the resulting Kubernetes resources, you can use the <code>timoni bundle build</code> command.</p> <p>Example:</p> <pre><code>timoni bundle build -f bundle.cue\n</code></pre>"},{"location":"bundles/#use-values-from-json-and-yaml-files","title":"Use values from JSON and YAML files","text":"<p>A bundle can be defined in multiple files of different formats:</p> <pre><code>timoni bundle build -f bundle.cue -f extras1.json -f extras2.yaml\n</code></pre> <p>Timoni extracts the CUE values from the JSON and YAML files, and unifies them with the bundle value. Note that setting the same field in multiple files is not supported.</p> <p>Timoni supports the following extensions: <code>.cue</code>, <code>.json</code>, <code>.yml</code>, <code>.yaml</code>.</p>"},{"location":"bundles/#uninstall","title":"Uninstall","text":"<p>To uninstall the instances defined in a Bundle file, you can use the <code>timoni bundle delete</code> command.</p> <p>Example:</p> <pre><code>timoni bundle delete -f bundle.cue\n</code></pre> <p>Another option is to specify the Bundle name, and Timoni will search the cluster and delete all the instances having the <code>bundle.timoni.sh/name: &lt;name&gt;</code> label:</p> <pre><code>timoni bundle delete --name my-bundle\n</code></pre>"},{"location":"bundles/#garbage-collection","title":"Garbage collection","text":"<p>Timoni's garbage collector keeps track of the applied resources and prunes the Kubernetes objects that were previously applied but are missing from the current revision.</p> <p>Example:</p> <pre><code>timoni bundle apply --prune -f bundle.cue\n</code></pre> <p>To prevent the garbage collector from deleting certain resources such as Kubernetes Persistent Volumes, these resources can be annotated with <code>action.timoni.sh/prune: \"disabled\"</code>.</p> <p>The garbage collection is enabled by default, to opt-out set <code>--prune=false</code>.</p>"},{"location":"bundles/#readiness-checks","title":"Readiness checks","text":"<p>By default, Timoni applies the instances in order, and will wait for each instance's resources to become ready, before moving to the next instance.</p> <p>The readiness check is performed for the Kubernetes resources with the following types:</p> <ul> <li>Kubernetes built-in kinds: Deployment, DaemonSet, StatefulSet,   PersistentVolumeClaim, Pod, PodDisruptionBudget, Job, CronJob, Service,   Secret, ConfigMap, CustomResourceDefinition</li> <li>Custom resources that are compatible   with kstatus</li> </ul> <p>Example:</p> <pre><code>timoni bundle apply --wait --timeout=5m -f bundle.cue\n</code></pre> <p>With <code>--timeout</code>, Timoni will retry the readiness checks until the specified timeout period expires. If an instance's resource fails to become ready, the apply command will exit with an error.</p> <p>The readiness check is enabled by default, to opt-out set <code>--wait=false</code>.</p>"},{"location":"bundles/#lint","title":"Lint","text":"<p>To verify that one or more CUE files contain a valid Bundle definition, you can use the <code>timoni bundle lint</code> command.</p> <p>Example:</p> <pre><code>timoni bundle lint -f bundle.cue -f extras.cue\n</code></pre>"},{"location":"bundles/#format","title":"Format","text":"<p>To format Bundle files, you can use the <code>cue fmt</code> command.</p> <p>Example:</p> <pre><code>cue fmt bundle.cue\n</code></pre>"},{"location":"comparison/","title":"Timoni compared to other tools","text":""},{"location":"comparison/#helm","title":"Helm","text":"<p>If you are familiar with Helm, a Timoni module is the equivalent of a chart,  a Timoni bundle is the equivalent of an umbrella chart, and a Timoni instance is the equivalent of a Helm release.</p>"},{"location":"comparison/#authoring-differences","title":"Authoring differences","text":"<ul> <li>Instead of using charts, Timoni utilizes CUE modules distributed as OCI artifacts.</li> <li>Timoni modules can only be pushed and pulled to/from container registries.</li> <li>Timoni modules can be signed and verified with Cosign for integrity, unlike Helm's reliance on Helm provenance and OpenPGP signatures.</li> <li>Timoni works with CUE templates and CUE types generated from Kubernetes API Go types, eliminating the need for Go templating of Kubernetes YAML.</li> <li>Timoni leverages CUE types generated from Kubernetes CRDs for validating custom resources, eliminating the need for 3rd-party tooling like kubeconform.</li> <li>Timoni allows authors to group Kubernetes resources and define the apply order for each group, instead of using Helm's pre/post install/upgrade hooks.</li> </ul>"},{"location":"comparison/#user-differences","title":"User differences","text":"<ul> <li>Timoni expects users to provide values as CUE definitions instead of supplying them in YAML format.</li> <li>Unlike Helm, Timoni allows condition statements in values and bundle files, enabling users to express logic using CUE.</li> <li>Timoni employs Kubernetes server-side apply and Flux's drift detection instead of Helm's client-side apply.</li> <li>Timoni patches only the Kubernetes objects that have changed during upgrades, while Helm applies all manifests.</li> <li>Timoni applies resources in stages, ensuring readiness for each resource group before proceeding to the next one (e.g., CRDs and namespaces, then workloads, then custom resources).</li> <li>Timoni supports upgrading CRDs and their controllers, unlike Helm, which ignores changes to CRDs.</li> <li>Timoni enables templating of CRDs, whereas Helm only supports plain YAML CRDs.</li> <li>Timoni's garbage collector can delete CRDs and PVCs, whereas Helm leaves them on the cluster during uninstallation.</li> <li>Timoni performs health checks on Kubernetes custom resources, which Helm ignores.</li> <li>Unlike Helm, Timoni doesn't require keeping a copy of all YAML manifests in a Kubernetes secret, eliminating the limit on the number of objects constituting an application.</li> <li>Timoni provides a <code>apply --diff</code> command for displaying a preview of the cluster state changes for an upgrade.</li> <li>Timoni bundles offer a declarative way of grouping multiple apps into a deployable unit, serving as an alternative to Helm's umbrella charts.</li> <li>Timoni modules can be referenced by their OCI SHA256 digest, ensuring immutability and reproducibility, unlike Helm charts that are referenced only by version.</li> </ul>"},{"location":"github-actions/","title":"GitHub Actions","text":"<p>Timoni can be used in GitHub workflows to perform actions such as build, test and push modules to container registries.</p>"},{"location":"github-actions/#usage","title":"Usage","text":"<p>To run Timoni commands on GitHub Linux runners, add the following steps to your GitHub workflow:</p> <pre><code>steps:\n- name: Setup Timoni\nuses: stefanprodan/timoni/actions/setup@main\nwith:\nversion: latest # latest or exact version e.g. 0.2.0\n- name: Run Timoni\nrun: timoni version\n</code></pre>"},{"location":"github-actions/#examples","title":"Examples","text":""},{"location":"github-actions/#push-to-github-container-registry","title":"Push to GitHub Container Registry","text":"<p>Example workflow for linting, testing and pushing a module to GitHub Container Registry:</p> <pre><code>name: Release module\non:\npush:\ntag: ['*'] # semver format\n\npermissions:\ncontents: read # needed for checkout\npackages: write # needed for GHCR access\n\njobs:\npush:\nruns-on: ubuntu-latest\nsteps:\n- name: Checkout\nuses: actions/checkout@v3\n- name: Setup CUE\nuses: cue-lang/setup-cue@main\n- name: Setup Timoni\nuses: stefanprodan/timoni/actions/setup@main\n- name: Lint\nrun: |\ntimoni mod lint ./modules/my-module\n- name: Test instance build\nrun: |\ntimoni build -n testing test ./modules/my-module\n- name: Push\nrun: |\ntimoni mod push ./modules/my-module \\\noci://ghcr.io/${{ github.repository_owner }}/modules/my-module \\\n--version ${{ github.ref_name }} \\\n--creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}\n</code></pre>"},{"location":"github-actions/#push-to-docker-hub","title":"Push to Docker Hub","text":"<p>Example workflow for using <code>docker login</code> to authenticate to Docker Hub:</p> <pre><code>name: Release module\non:\npush:\ntag: ['*'] # semver format\n\npermissions:\ncontents: read # needed for checkout\n\njobs:\npush:\nruns-on: ubuntu-latest\nsteps:\n- name: Checkout\nuses: actions/checkout@v3\n- name: Setup Timoni\nuses: stefanprodan/timoni/actions/setup@main\n- name: Login to Docker Hub\nuses: docker/login-action@v2\nwith:\nregistry: docker.io\nusername: ${{ secrets.DOCKER_USERNAME }}\npassword: ${{ secrets.DOCKER_PASSWORD }}\n- name: Push\nrun: |\ntimoni mod push ./modules/my-module \\\noci://docker.io/my-org/my-module \\\n--version ${{ github.ref_name }}\n- name: Pull\nrun: |\nmkdir -p /tmp/my-module\ntimoni mod pull oci://docker.io/my-org/my-module \\\n--version ${{ github.ref_name }} \\\n--output /tmp/my-module\n</code></pre> <p>Note that docker/login-action can be used to authenticate to any private registry including ACR, ECR, GCR.</p>"},{"location":"gitops-flux/","title":"GitOps Guide","text":"<p>This guide shows you how Timoni can be used together with Flux to create a GitOps delivery pipeline for module instances.</p> <pre><code>flowchart LR\n\nA((User)) --&gt; Y\nY(Module Values) --&gt; B((Timoni))\nB --&gt; D[Container Registry]\nD --&gt; E((Flux CD))\nE --&gt; F[Kubernetes]</code></pre>"},{"location":"gitops-flux/#build-and-push-workflow","title":"Build and Push workflow","text":"<p>We'll build a module instance with Timoni, and we'll push  the resulting Kubernetes manifests to a container registry with Flux CLI.</p> <pre><code>timoni -n apps build podinfo oci://ghcr.io/stefanprodan/modules/podinfo \\\n--values ./staging-values.cue | \\\nflux push artifact oci://registry.internal/podinfo:staging \\\n--source=\"http://github.com/stefanprodan/podinfo\" \\\n--revision=\"6.3.4\" \\\n--path=-\n</code></pre> <p>The above commands could be run in CI for the Git repository that contains the values files. Committing a change to the values, will result in a new artifact pushed to the registry. From there, Flux running in Kubernetes, will pick up the latest changes and deploy them on the cluster.</p>"},{"location":"gitops-flux/#continuous-delivery-workflow","title":"Continuous Delivery workflow","text":"<p>In the Git repository where Flux was bootstrap, we'll configure the reconciliation of the Kubernetes resources pushed to the container registry.</p> <pre><code>---\napiVersion: source.toolkit.fluxcd.io/v1beta2\nkind: OCIRepository\nmetadata:\nname: podinfo\nnamespace: flux-system\nspec:\ninterval: 1m\nurl: oci://registry.internal/podinfo\nref:\ntag: staging\n---\napiVersion: kustomize.toolkit.fluxcd.io/v1beta2\nkind: Kustomization\nmetadata:\nname: podinfo\nnamespace: flux-system\nspec:\ntargetNamespace: apps\ninterval: 1h\nretryInterval: 30s\ntimeout: 5m\npath: ./\nprune: true\nwait: true\nsourceRef:\nkind: OCIRepository\nname: podinfo\n</code></pre> <p>Based on the above configuration, Flux will look for changes in the container registry every minute. When it finds a new digest of the OCI artifact, Flux will automatically reconcile the changes on the cluster.</p> <p>To find out more about Flux OCI support please see the Flux OCI docs.</p>"},{"location":"install/","title":"Installation Guide","text":"<p>Timoni is available as a binary executable for Linux, macOS and Windows. The AMD64 and ARM64 binaries can be downloaded from GitHub releases.</p> Install with brewInstall with arkadeInstall from source <p>Install the latest release on macOS or Linux with:</p> <pre><code>brew install stefanprodan/tap/timoni\n</code></pre> <p>Note that the Homebrew formula will setup shell autocompletion for Bash, Fish and Zsh.</p> <p>Install the latest release on Windows, macOS or Linux with:</p> <pre><code>arkade get timoni\n</code></pre> <p>Note that the Arkade version must be 0.9.11 or newer.</p> <p>Using Go &gt;= 1.20:</p> <pre><code>go install github.com/stefanprodan/timoni/cmd/timoni@latest\n</code></pre>"},{"location":"install/#shell-autocompletion","title":"Shell autocompletion","text":"<p>Configure your shell to load timoni completions:</p> BashFishPowershellZsh <p>To load completion run:</p> <pre><code>. &lt;(timoni completion bash)\n</code></pre> <p>To configure your bash shell to load completions for each session add to your bashrc:</p> <pre><code># ~/.bashrc or ~/.bash_profile\ncommand -v timoni &gt;/dev/null &amp;&amp; . &lt;(timoni completion bash)\n</code></pre> <p>If you have an alias for timoni, you can extend shell completion to work with that alias:</p> <pre><code># ~/.bashrc or ~/.bash_profile\nalias tm=timoni\ncomplete -F __start_timoni tm\n</code></pre> <p>To configure your fish shell to load completions for each session write this script to your completions dir:</p> <pre><code>timoni completion fish &gt; ~/.config/fish/completions/timoni.fish\n</code></pre> <p>To load completion run:</p> <pre><code>. &lt;(timoni completion powershell)\n</code></pre> <p>To configure your powershell shell to load completions for each session add to your powershell profile:</p> <p>Windows:</p> <p><pre><code>cd \"$env:USERPROFILE\\Documents\\WindowsPowerShell\\Modules\"\ntimoni completion &gt;&gt; timoni-completion.ps1\n</code></pre> Linux:</p> <pre><code>cd \"${XDG_CONFIG_HOME:-\"$HOME/.config/\"}/powershell/modules\"\ntimoni completion &gt;&gt; timoni-completions.ps1\n</code></pre> <p>To load completion run:</p> <pre><code>. &lt;(timoni completion zsh) &amp;&amp; compdef _timoni timoni\n</code></pre> <p>To configure your zsh shell to load completions for each session add to your zshrc:</p> <pre><code># ~/.zshrc or ~/.profile\ncommand -v timoni &gt;/dev/null &amp;&amp; . &lt;(timoni completion zsh) &amp;&amp; compdef _timoni timoni\n</code></pre> <p>or write a cached file in one of the completion directories in your ${fpath}:</p> <pre><code>echo \"${fpath// /\\n}\" | grep -i completion\ntimoni completion zsh &gt; _timoni\n\nmv _timoni ~/.oh-my-zsh/completions  # oh-my-zsh\nmv _timoni ~/.zprezto/modules/completion/external/src/  # zprezto\n</code></pre>"},{"location":"install/#slsa-provenance-sboms","title":"SLSA Provenance &amp; SBOMs","text":"<p>The build, release and provenance portions of Timoni's supply chain meet the SLSA Build Level 3 requirements.</p> <p>The release artifacts are produced on GitHub-hosted runners using GoReleaser and the provenance generation is handled by the official SLSA GitHub Generator.</p> <p>To verify a release artifact such as the Timoni binary tarball, you can use the slsa-verifier tool:</p> <pre><code>TIMONI_VER=0.10.0 &amp;&amp; \\\ngh release download v${TIMONI_VER} -R=stefanprodan/timoni -p=\"*\" &amp;&amp; \\\nslsa-verifier verify-artifact \\\n--provenance-path timoni_${TIMONI_VER}_provenance.intoto.jsonl \\\n--source-uri github.com/stefanprodan/timoni  \\\n--source-tag v${TIMONI_VER} \\\ntimoni_${TIMONI_VER}_darwin_arm64.tar.gz\n</code></pre> <p>Each release comes with a Software Bill of Materials (SBOM) in SPDX format. The SBOMs are generated on GitHub-hosted runners using GoReleaser and Syft.</p> <p>To scan a release for vulnerabilities, you can use Grype:</p> <pre><code>TIMONI_VER=0.10.0 &amp;&amp; \\\ngh release download v${TIMONI_VER} -R=stefanprodan/timoni -p=\"*sbom.spdx.json\" &amp;&amp; \\\ngrype sbom:./timoni_${TIMONI_VER}_sbom.spdx.json\n</code></pre>"},{"location":"module-semver/","title":"Module Versioning","text":"<p>Timoni modules are distributed as OCI artifacts. When publishing a module version to a container registry, the version number is used as the OCI artifact tag. The version number is also stored in the artifact manifest as the value of the <code>org.opencontainers.image.revision</code> annotation.</p>"},{"location":"module-semver/#version-format","title":"Version format","text":"<p>The version format used by Timoni follows the SemVer 2 standard, with the following restrictions:</p> <ul> <li>The version number must take the form <code>X.Y.Z</code> where X, Y, and Z are non-negative integers, and must not contain leading zeroes.</li> <li>Prefixing the version number with <code>v</code> is not supported.</li> <li>Suffixing the version number with build metadata by appending a plus sign is not supported, because the <code>+</code> sign can't be used in OCI tags.</li> </ul> <p>The supported formats are:</p> <ul> <li><code>0.Y.Z</code> - denotes initial development e.g. <code>0.1.2</code></li> <li><code>X.Y.Z</code> - denotes a stable release when  <code>X &gt;= 1</code> e.g. <code>1.0.0</code> or <code>1.23.45</code></li> <li><code>X.Y.Z-alpha.N</code> - denotes an alpha pre-release e.g. <code>2.0.0-alpha.1</code></li> <li><code>X.Y.Z-beta.N</code> - denotes a beta pre-release e.g. <code>2.0.0-beta.1</code></li> <li><code>X.Y.Z-rc.N</code> - denotes a releases candidate e.g. <code>2.0.0-rc.1</code></li> </ul>"},{"location":"module-semver/#publishing-module-versions","title":"Publishing module versions","text":"<p>Timoni offers a command for publishing a module version by packaging a local module as an OCI artifact and pushing the artifact to a container registry.</p> <p>When publishing a module with timoni mod push, the version number must be specified using the <code>--version</code> flag.</p> <p>Example of publishing version <code>1.0.0</code> as the latest stable release:</p> <pre><code>timoni mod push ./modules/my-app oci://ghcr.io/my-org/modules/my-app \\\n--source='https://github.com/my-org/my-app' \\\n--latest=true \\\n--version=1.0.0\n</code></pre> <p>To add custom metadata to a version, such as licenses and documentation links please the timoni mod push docs.</p> <p>Example of publishing a pre-release version:</p> <pre><code>timoni mod push ./modules/my-app oci://ghcr.io/my-org/modules/my-app \\\n--source='https://github.com/my-org/my-app' \\\n--latest=false \\\n--version=2.0.0-beta.1\n</code></pre> <p>The <code>--latest</code> flag is used to mark a stable release as the latest version. When <code>--latest</code> is set to <code>true</code>, Timoni will push the version tag, then it will tag the version as <code>latest</code> in the container registry.</p> <p>Immutability</p> <p>Note that a Timoni module version should be immutable. The only tag that is suppose to be mutable, is the <code>latest</code> one. Overriding an existing version tag in the container registry should be avoided, some registries allow enforcing immutability for semver tags but this is not guranteed by default.</p> <p>To automate the publishing of module versions, please see the Timoni GitHub Actions.</p>"},{"location":"module-semver/#listing-module-versions","title":"Listing module versions","text":"<p>Timoni offer a command for listing all the versions available in a container registry for a particular module.</p> <p>The <code>timoni mod list oci://&lt;module-url&gt;</code> prints a table with the versions order by semver and the OCI digest corresponding to each version.</p> <p>Example:</p> <pre><code>$ timoni mod list oci://ghcr.io/stefanprodan/modules/redis\nVERSION DIGEST                                                                  \nlatest  sha256:b58f3af3ef7a8e588a77a2a2f37af0a9ffc408fb27ff3f6ecbd2db42cf2a4297 \n7.0.12  sha256:b58f3af3ef7a8e588a77a2a2f37af0a9ffc408fb27ff3f6ecbd2db42cf2a4297 \n7.0.11  sha256:0e0f40e7824ff8c59e309d9b8bf19e235c6e779c93aafeeeaa86cbca49989950 \n7.0.10  sha256:7fcb6f6918902c0dedc2ba4545fbdeca119a04644a53400af15b977e3921c600 \n</code></pre>"},{"location":"module/","title":"Module Structure","text":"<p>A Timoni module contains a set of CUE definitions and constraints organised into a CUE module with an opinionated file structure.</p>"},{"location":"module/#file-structure","title":"File Structure","text":"<p>A module consists of a collection of CUE files inside a directory with the following structure:</p> <pre><code>myapp\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 cue.mod\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gen # Kubernetes types\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 module.cue # Module metadata\n\u251c\u2500\u2500 templates\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.cue # Config schema and default values\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 deployment.cue # Kubernetes Deployment template\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 service.cue # Kubernetes Service template\n\u251c\u2500\u2500 timoni.cue # Timoni entry point\n\u251c\u2500\u2500 timoni.ignore # Ignore rules\n\u2514\u2500\u2500 values.cue # Timoni values placeholder\n</code></pre> <p>To create a new module in the current directory:</p> <pre><code>timoni mod init myapp .\n</code></pre>"},{"location":"module/#entry-point","title":"Entry point","text":"<p>The <code>timoni.cue</code> file contains the definition of how Timoni should validate, build and deploy a module instance.</p> <p>This file is generated by <code>timoni mod init</code> with the following content:</p> <pre><code>// source: myapp/timoni.cue\n\npackage main\n\nimport (\ntemplates \"timoni.sh/myapp/templates\"\n)\n\n// Define the schema for the user-supplied values.\n// At runtime, Timoni injects the supplied values\n// and validates them according to the Config schema.\nvalues: templates.#Config\n\n// Define how Timoni should build, validate and\n// apply the Kubernetes resources.\ntimoni: {\napiVersion: \"v1alpha1\"\n\n// Define the instance that generates the Kubernetes resources.\n// At runtime, Timoni builds the instance and validates\n// the resulting resources according to their Kubernetes schema.\ninstance: templates.#Instance &amp; {\n// The user-supplied values are merged with the\n// default values at runtime by Timoni.\nconfig: values\n// The instance name and namespace tag values\n// are injected at runtime by Timoni.\nconfig: metadata: {\nname:      string @tag(name)\nnamespace: string @tag(namespace)\n}\n}\n\n// Pass the generated Kubernetes resources\n// to Timoni's multi-step apply.\napply: all: [ for obj in instance.objects {obj}]\n}\n</code></pre>"},{"location":"module/#ignore","title":"Ignore","text":"<p>The <code>timoni.ignore</code> file contains rules in the .gitignore pattern format. The paths matching the defined rules are excluded when publishing the module to a container registry.</p> <p>When publishing modules as OCI artifacts, it is recommended to use the following ignore patterns:</p> <pre><code># VCS\n.git/\n.gitignore\n.gitmodules\n.gitattributes\n\n# Go\nvendor/\ngo.mod\ngo.sum\n\n# CUE\n*_tool.cue\n\n# Timoni\ntimoni.ignore\n</code></pre>"},{"location":"module/#values","title":"Values","text":"<p>The <code>values.cue</code> file holds the default values. Note that this file must have no imports and all values must be concrete.</p> <pre><code>// source: myapp/values.cue\n\nvalues: {\nmessage: \"Hello World\"\nimage: {\nrepository: \"cgr.dev/chainguard/nginx\"\ndigest:     \"sha256:d2b0e52d7c2e5dd9fe5266b163e14d41ed97fd380deb55a36ff17efd145549cd\"\ntag:        \"1.25.1\"\n}\n}\n</code></pre> <p>The <code>values</code> schema is set in the <code>timoni.cue</code> file:</p> <pre><code>// source: myapp/timoni.cue\n\nvalues: templates.#Config\n</code></pre> <p>Note that the <code>README.md</code> file should contain the config values schema documentation.</p>"},{"location":"module/#templates","title":"Templates","text":"<p>The templates directory is where module authors define Kubernetes resources and their configuration schema.</p>"},{"location":"module/#config","title":"Config","text":"<p>The schema and defaults for the user-supplied values are defined in <code>templates/config.cue</code>.</p> <p>Example of a minimal config for an app deployment:</p> <pre><code>// source: myapp/templates/config.cue\n\n#Config: {\nmetadata: metav1.#ObjectMeta\nmetadata: name:      *\"myapp\" | string\nmetadata: namespace: *\"default\" | string\nmetadata: annotations?: {[string]: string}\n\nimage: timoniv1.#Image\n\nreplicas: *1 | int &amp; &gt;0\nservice: port: *80 | int &amp; &gt;0 &amp; &lt;=65535\nresources?: corev1.#ResourceRequirements\n}\n</code></pre> <p>The user-supplied values can:</p> <ul> <li>set a different value for the fields with defaults e.g. the service port</li> <li>add labels to metadata except for the name and version</li> <li>add annotations to metadata</li> <li>set resource requirements requests and/or limits</li> </ul> <pre><code>// source: myapp-values/values.cue\n\nvalues: {\nservice: port: 8080\nmetadata: annontations: \"org/owner\": \"dev-team\"\nresources: limits: memory: \"1Gi\"\n}\n</code></pre>"},{"location":"module/#instance","title":"Instance","text":"<p>Example of defining an instance containing a Kubernetes Service and Deployment:</p> <pre><code>// source: myapp/templates/config.cue\n\n#Instance: {\nconfig: #Config\n\nobjects: {\nsvc:    #Service &amp; {_config:        config}\ndeploy: #Deployment &amp; {_config:     config}\n}\n}\n</code></pre>"},{"location":"module/#kubernetes-resources","title":"Kubernetes resources","text":"<p>Example of a Kubernetes Service template:</p> <pre><code>// source: myapp/templates/service.cue\n\npackage templates\n\nimport (\ncorev1 \"k8s.io/api/core/v1\"\n)\n\n#Service: corev1.#Service &amp; {\n_config:    #Config\napiVersion: \"v1\"\nkind:       \"Service\"\nmetadata:   _config.metadata\nspec:       corev1.#ServiceSpec &amp; {\ntype:     corev1.#ServiceTypeClusterIP\nselector: _config.metadata.labels\nports: [\n{\nname:       \"http\"\ntargetPort: name\nport:       _config.service.port\n},\n]\n}\n}\n</code></pre>"},{"location":"module/#kubernetes-types","title":"Kubernetes types","text":"<p>The <code>cue.mod</code> directory contains the Kubernetes types and their schema. These files are automatically generated by CUE from the Kubernetes API Go packages.</p> <pre><code>./myapp/cue.mod/\n\u251c\u2500\u2500 gen\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 k8s.io\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 api\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 apps\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 core\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 apimachinery\n\u2514\u2500\u2500 module.cue\n</code></pre> <p>To update the schemas to a specific Kubernetes version, run the following commands from within the <code>myapp</code> directory:</p> <pre><code># download the Kubernetes Go APIs\ngo get k8s.io/api/...@v0.27.3\n\n# generate the CUE types for v1 core and apps APIs\ncue get go k8s.io/api/core/v1\ncue get go k8s.io/api/apps/v1\n</code></pre> <p>To add other Kubernetes types e.g. <code>Ingress</code> and <code>NetworkPolicy</code>:</p> <pre><code>cue get go k8s.io/api/networking/v1\n</code></pre>"},{"location":"module/#kubernetes-crds","title":"Kubernetes CRDs","text":"<p>To add 3rd-party Kubernetes types e.g. Prometheus Operator <code>ServiceMonitor</code>:</p> <pre><code># download the Prometheus Operator Go APIs\ngo get github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1@v0.63.0\n\n# generate the CUE types for v1 monitoring APIs\ncue get go github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1\n</code></pre> <p>The Kubernetes CUE types are used in templates to set the validation schema of a resource e.g.:</p> <pre><code>package templates\n\nimport (\npromv1 \"github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1\"\n)\n\n#ServiceMonitor: promv1.#ServiceMonitor &amp; {\n_config:    #Config\napiVersion: \"monitoring.coreos.com/v1\"\nkind:       promv1.#ServiceMonitorsKind\nmetadata:   _config.metadata\nspec: {\nendpoints: [{\npath:     \"/metrics\"\nport:     \"http-metrics\"\ninterval: _config.monitoring.interval\n}]\nnamespaceSelector: matchNames: [_config.metadata.namespace]\nselector: matchLabels: _config.selectorLabels\n}\n}\n</code></pre>"},{"location":"quickstart/","title":"Quickstart Guide","text":"<p>This guide shows you the basics of Timoni. You'll deploy a demo application on Kubernetes using a Timoni module published in a container registry.</p>"},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<p>To follow this guide you'll need:</p> <ul> <li>A Kubernetes cluster</li> <li>Timoni installed on a system with writable <code>/tmp</code></li> </ul> <p>Install Timoni with:</p> <pre><code>brew install stefanprodan/tap/timoni\n</code></pre> <p>For other methods, see the installation guide.</p>"},{"location":"quickstart/#install-a-module","title":"Install a module","text":"<p>To install a Timoni module on a Kubernetes cluster, you have to specify the container registry address and the version of a module.</p> <p>Modules and Instances</p> <p>If you are familiar with Helm, a Timoni module is the equivalent of a chart, and a Timoni instance is the equivalent of a Helm release. To learn more about modules and instances, please see the concepts section.</p> <p>For example, to install the latest stable version of podinfo in a new namespace:</p> <pre><code>$ timoni -n test apply podinfo oci://ghcr.io/stefanprodan/modules/podinfo --version latest\npulling oci://ghcr.io/stefanprodan/modules/podinfo:latest\nusing module timoni.sh/podinfo version 6.3.4\ninstalling podinfo in namespace test\nNamespace/test created\nServiceAccount/test/podinfo created\nService/test/podinfo created\nDeployment/test/podinfo created\nwaiting for 3 resource(s) to become ready...\nall resources are ready\n</code></pre>"},{"location":"quickstart/#list-and-inspect-instances","title":"List and inspect instances","text":"<p>You can list all instances in a cluster with <code>timoni ls -A</code>.</p> <p>To get more information on an instance, you can use the <code>timoni inspect</code> sub-commands:</p> <pre><code>$ timoni -n test inspect module podinfo\nname: timoni.sh/podinfo\nversion: 6.3.4\nrepository: oci://ghcr.io/stefanprodan/modules/podinfo\ndigest: sha256:594b6f8c5c316b4a9aec4b5a8afb84e4ccb94ce5236548097ed74792d270683f\n</code></pre> <p>To learn more about the available commands, use <code>timoni inspect --help</code>.</p> <p>To see the status of the Kubernetes resources managed by an instance:</p> <pre><code>timoni -n test status podinfo </code></pre>"},{"location":"quickstart/#configure-a-module-instance","title":"Configure a module instance","text":"<p>To customise an instance, you can supply the configuration values using values files.</p> <p>For example, to set the QoS class to guaranteed, create a <code>qos-values.cue</code> file that sets the resources limits equal to the requests:</p> <pre><code>values: {\n    resources: requests: {\n        cpu:    \"100m\"\n        memory: \"128Mi\"\n    }\n    resources: limits: resources.requests\n}\n</code></pre> <p>Apply the config to the podinfo module to perform an upgrade:</p> <pre><code>timoni -n test apply podinfo \\\noci://ghcr.io/stefanprodan/modules/podinfo \\\n--values qos-values.cue\n</code></pre> <p>Before running an upgrade, you can review the changes that will be made on the cluster with <code>timoni apply --dry-run --diff</code>.</p> <p>To learn more about all the available apply options, use <code>timoni apply --help</code>.</p>"},{"location":"quickstart/#uninstall-a-module-instance","title":"Uninstall a module instance","text":"<p>To uninstall an instance and delete all the managed Kubernetes resources:</p> <pre><code>timoni -n test delete podinfo --wait\n</code></pre>"},{"location":"quickstart/#bundling-instances","title":"Bundling instances","text":"<p>For deploying complex applications to production, it is recommended to use Timoni Bundles.</p> <p>A Timoni Bundle is a CUE file for defining a group of instances together with their values and module references.</p> <p>The following is an example of a Bundle that defines a Redis master-replica cluster and a podinfo instance connected to the Redis instance.</p> <pre><code>bundle: {\n    apiVersion: \"v1alpha1\"\n    name:       \"podinfo\"\n    instances: {\n        redis: {\n            module: {\n                url:     \"oci://ghcr.io/stefanprodan/modules/redis\"\n                version: \"7.0.12\"\n            }\n            namespace: \"podinfo\"\n            values: maxmemory: 256\n        }\n        podinfo: {\n            module: url:     \"oci://ghcr.io/stefanprodan/modules/podinfo\"\n            module: version: \"6.3.5\"\n            namespace: \"podinfo\"\n            values: caching: {\n                enabled:  true\n                redisURL: \"tcp://redis:6379\"\n            }\n        }\n    }\n}\n</code></pre> <p>To apply the above bundle on a cluster, save the file as <code>podinfo.bundle.cue</code> and run:</p> <pre><code>timoni bundle apply -f podinfo.bundle.cue\n</code></pre> <p>To list all the instances managed by a bundle:</p> <pre><code>timoni list -A --bundle podinfo\n</code></pre> <p>To delete all the instances defined in a bundle:</p> <pre><code>timoni bundle delete -f podinfo.bundle.cue\n</code></pre> <p>To learn more about bundles, please see the Bundle API documentation.</p>"},{"location":"values/","title":"Values","text":"<p>Values are used to customise a module instance by providing Timoni with a config object. The config schema, constraints and the default values are contained in the module definition.</p>"},{"location":"values/#values-files","title":"Values files","text":"<p>Values can be supplied as CUE, YAML or JSON files to the <code>timoni apply &lt;instance-name&gt; [--values &lt;path/to/values&gt;]</code> command.</p> <p>Given the config definition:</p> <pre><code>#Config: {\nimage: {\nrepository: *\"docker.io/stefanprodan/podinfo\" | string\ntag:        *\"6.3.0\" | string\npullPolicy: *\"IfNotPresent\" | string\n}\nreplicas:   *1 | int &amp; &gt;0\nresources?: corev1.#ResourceRequirements\n}\n</code></pre> <p>A values file can override default values such as an image repository:</p> <pre><code>values: {\nimage: repository: \"ghcr.io/stefanprodan/podinfo\"\n}\n</code></pre> <p>And set optional values such as resources limits:</p> <pre><code>values: {\nresources: limits: {\ncpu:    \"100m\"\nmemory: \"128Mi\"\n}\n}\n</code></pre> <p>To create an instance using the custom values, both files can be supplied with:</p> <pre><code>timoni -n default apply podinfo \\\noci://ghcr.io/stefanprodan/modules/podinfo \\\n--values image-values.cue \\\n--values limits-values.cue\n</code></pre> <p>Values can also be supplied by piping a CUE object, for example:</p> <pre><code>echo \"values: replicas: 2\" | timoni -n default apply podinfo \\\noci://ghcr.io/stefanprodan/modules/podinfo \\\n--values image-values.cue \\\n--values limits-values.cue\n</code></pre> <p>At apply time, Timoni merges the values, validates them against the config schema and creates the instance.</p> <p>When values are supplied as CUE files, they can contain arithmetic operations, string interpolation and everything else that CUE std lib supports.</p> <p>For example, to set the resources limits to 2x requests:</p> <pre><code>values: {\n_mcpu: 500\n_mem:  256\nresources: {\nrequests: {\ncpu:    \"\\(_mcpu)m\"\nmemory: \"\\(_mem)Mi\"\n}\nlimits: {\ncpu:    \"\\(_mcpu*2)m\"\nmemory: \"\\(_mem*2)Mi\"\n}\n}\n}\n</code></pre>"},{"location":"cmd/timoni/","title":"timoni","text":""},{"location":"cmd/timoni/#timoni","title":"timoni","text":"<p>A package manager for Kubernetes powered by CUE.</p>"},{"location":"cmd/timoni/#options","title":"Options","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n  -h, --help                           help for timoni\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni apply   - Install or upgrade a module instance</li> <li>timoni build   - Build an instance from a module and print the resulting Kubernetes resources</li> <li>timoni bundle     - Commands for managing bundles</li> <li>timoni completion     - Generates completion scripts for various shells</li> <li>timoni delete     - Uninstall a module instance from the cluster</li> <li>timoni inspect   - Commands for getting information about installed instances</li> <li>timoni list     - Prints a table of instances and their module version</li> <li>timoni mod   - Commands for managing modules</li> <li>timoni status     - Displays the current status of Kubernetes resources managed by an instance</li> <li>timoni version   - Print the client and API version information</li> </ul>"},{"location":"cmd/timoni_apply/","title":"timoni apply","text":""},{"location":"cmd/timoni_apply/#timoni-apply","title":"timoni apply","text":"<p>Install or upgrade a module instance</p>"},{"location":"cmd/timoni_apply/#synopsis","title":"Synopsis","text":"<p>The apply command installs or upgrades a module instance on the Kubernetes cluster.</p> <p>The apply command performs the following steps:</p> <ul> <li>Pulls the module version from the specified container registry.</li> <li>If the registry is private, uses the credentials found in '~/.docker/config.json'.</li> <li>If the registry credentials are specified with '--creds', these take priority over the docker ones.</li> <li>Creates the specified '--namespace' if it doesn't exist.</li> <li>Merges all the values supplied with '--values' on top of the default values found in the module.</li> <li>Builds the module by passing the instance name, namespace and values.</li> <li>Labels the resulting Kubernetes resources with the instance name and namespace.</li> <li>Applies the Kubernetes resources on the cluster.</li> <li>Creates or updates the instance inventory with the last applied resources IDs.</li> <li>Recreates the resources annotated with 'action.timoni.sh/force: \"enabled\"' if they contain changes to immutable fields.</li> <li>Waits for the applied resources to become ready.</li> <li>Deletes the resources which were previously applied but are missing from the current instance.</li> <li>Skips the resources annotated with 'action.timoni.sh/prune: \"disabled\"' from deletion.</li> <li>Waits for the deleted resources to be finalised.</li> </ul> <pre><code>timoni apply [INSTANCE NAME] [MODULE URL] [flags]\n</code></pre>"},{"location":"cmd/timoni_apply/#examples","title":"Examples","text":"<pre><code>  # Install a module instance and create the namespace if it doesn't exists\n  timoni apply -n apps app oci://docker.io/org/module -v 1.0.0\n\n  # Do a dry-run upgrade and print the diff\n  timoni apply -n apps app oci://docker.io/org/module -v 1.0.0 \\\n  --values ./values-1.cue \\\n  --dry-run --diff\n\n  # Install or upgrade an instance with custom values by merging them in the specified order\n  timoni apply -n apps app oci://docker.io/org/module -v 1.0.0 \\\n  --values ./values-1.cue \\\n  --values ./values-2.cue\n\n  # Upgrade an instance and recreate immutable Kubernetes resources such as Jobs\n  timoni apply -n apps app oci://docker.io/org/module -v 2.0.0 \\\n  --values ./values-1.cue \\\n  --force\n\n  # Install or upgrade an instance with custom values from stdin\n  echo \"values: replicas: 2\" | timoni apply -n apps app oci://docker.io/org/module --values -\n\n  # Install or upgrade an instance with values in YAML and JSON format\n  timoni apply -n apps app oci://docker.io/org/module \\\n  --values ./values-1.yaml \\\n  --values ./values-2.json\n</code></pre>"},{"location":"cmd/timoni_apply/#options","title":"Options","text":"<pre><code>      --creds creds           The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n      --diff                  Perform a server-side apply dry run and prints the diff.\n      --dry-run               Perform a server-side apply dry run.\n      --force                 Recreate immutable Kubernetes resources.\n  -h, --help                  help for apply\n      --overwrite-ownership   Overwrite instance ownership, if the instance is owned by a Bundle.\n  -p, --package package       The name of the module's package used for building the templates. (default main)\n  -f, --values strings        The local path to values files (cue, yaml or json format).\n  -v, --version version       The version of the module e.g. '1.0.0' or '1.0.0-rc.1'.\n      --wait                  Wait for the applied Kubernetes objects to become ready. (default true)\n</code></pre>"},{"location":"cmd/timoni_apply/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_apply/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> </ul>"},{"location":"cmd/timoni_build/","title":"timoni build","text":""},{"location":"cmd/timoni_build/#timoni-build","title":"timoni build","text":"<p>Build an instance from a module and print the resulting Kubernetes resources</p> <pre><code>timoni build [INSTANCE NAME] [MODULE URL] [flags]\n</code></pre>"},{"location":"cmd/timoni_build/#examples","title":"Examples","text":"<pre><code>  # Build an instance from a local module\n  timoni build app ./path/to/module --output yaml\n\n  # Build an instance with custom values by merging them in the specified order\n  timoni build app ./path/to/module \\\n  --values ./values-1.cue \\\n  --values ./values-2.cue\n</code></pre>"},{"location":"cmd/timoni_build/#options","title":"Options","text":"<pre><code>      --creds creds       The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n  -h, --help              help for build\n  -o, --output string     The format in which the Kubernetes objects should be printed, can be 'yaml' or 'json'. (default \"yaml\")\n  -p, --package package   The name of the module's package used for building the templates. (default main)\n  -f, --values strings    The local path to values files (cue, yaml or json format).\n  -v, --version version   The version of the module e.g. '1.0.0' or '1.0.0-rc.1'.\n</code></pre>"},{"location":"cmd/timoni_build/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_build/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> </ul>"},{"location":"cmd/timoni_bundle/","title":"timoni bundle","text":""},{"location":"cmd/timoni_bundle/#timoni-bundle","title":"timoni bundle","text":"<p>Commands for managing bundles</p>"},{"location":"cmd/timoni_bundle/#options","title":"Options","text":"<pre><code>  -h, --help   help for bundle\n</code></pre>"},{"location":"cmd/timoni_bundle/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_bundle/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> <li>timoni bundle apply     - Install or upgrade instances from a bundle</li> <li>timoni bundle build     - Build and print the resulting Kubernetes resources for all instances from a Bundle</li> <li>timoni bundle delete   - Delete all instances from a bundle</li> <li>timoni bundle lint   - Validate bundle definitions</li> </ul>"},{"location":"cmd/timoni_bundle_apply/","title":"timoni bundle apply","text":""},{"location":"cmd/timoni_bundle_apply/#timoni-bundle-apply","title":"timoni bundle apply","text":"<p>Install or upgrade instances from a bundle</p>"},{"location":"cmd/timoni_bundle_apply/#synopsis","title":"Synopsis","text":"<p>The bundle apply command installs or upgrades the instances defined in a bundle.</p> <pre><code>timoni bundle apply [flags]\n</code></pre>"},{"location":"cmd/timoni_bundle_apply/#examples","title":"Examples","text":"<pre><code>  # Install all instances from a bundle\n  timoni bundle apply -f bundle.cue\n\n  # Do a dry-run upgrade and print the diff\n  timoni bundle apply -f bundle.cue \\\n  --dry-run --diff\n\n  # Force apply instances from multiple bundles\n  timoni bundle apply --force \\\n  -f ./bundle.cue \\\n  -f ./bundle_secrets.cue\n\n  # Pass secret values from stdin\n  cat ./bundle_secrets.cue | timoni bundle apply -f ./bundle.cue -f -\n</code></pre>"},{"location":"cmd/timoni_bundle_apply/#options","title":"Options","text":"<pre><code>      --creds creds           The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n      --diff                  Perform a server-side apply dry run and prints the diff.\n      --dry-run               Perform a server-side apply dry run.\n  -f, --file strings          The local path to bundle.cue files.\n      --force                 Recreate immutable Kubernetes resources.\n  -h, --help                  help for apply\n      --overwrite-ownership   Overwrite instance ownership, if any instances are owned by other Bundles.\n  -p, --package package       The name of the module's package used for building the templates. (default main)\n      --wait                  Wait for the applied Kubernetes objects to become ready. (default true)\n</code></pre>"},{"location":"cmd/timoni_bundle_apply/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_bundle_apply/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni bundle     - Commands for managing bundles</li> </ul>"},{"location":"cmd/timoni_bundle_build/","title":"timoni bundle build","text":""},{"location":"cmd/timoni_bundle_build/#timoni-bundle-build","title":"timoni bundle build","text":"<p>Build and print the resulting Kubernetes resources for all instances from a Bundle</p>"},{"location":"cmd/timoni_bundle_build/#synopsis","title":"Synopsis","text":"<p>The bundle build command builds and prints the resulting Kubernetes resources for all instances defined in a Bundle.</p> <pre><code>timoni bundle build [flags]\n</code></pre>"},{"location":"cmd/timoni_bundle_build/#examples","title":"Examples","text":"<pre><code>  # Build all instances from a bundle\n  timoni bundle build -f bundle.cue\n\n  # Pass secret values from stdin\n  cat ./bundle_secrets.cue | timoni bundle build -f ./bundle.cue -f -\n</code></pre>"},{"location":"cmd/timoni_bundle_build/#options","title":"Options","text":"<pre><code>      --creds creds       The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n  -f, --file strings      The local path to bundle.cue files.\n  -h, --help              help for build\n  -p, --package package   The name of the module's package used for building the templates. (default main)\n</code></pre>"},{"location":"cmd/timoni_bundle_build/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_bundle_build/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni bundle     - Commands for managing bundles</li> </ul>"},{"location":"cmd/timoni_bundle_delete/","title":"timoni bundle delete","text":""},{"location":"cmd/timoni_bundle_delete/#timoni-bundle-delete","title":"timoni bundle delete","text":"<p>Delete all instances from a bundle</p>"},{"location":"cmd/timoni_bundle_delete/#synopsis","title":"Synopsis","text":"<p>The bundle delete command uninstalls the instances and deletes all their Kubernetes resources from the cluster.'.</p> <pre><code>timoni bundle delete [flags]\n</code></pre>"},{"location":"cmd/timoni_bundle_delete/#examples","title":"Examples","text":"<pre><code>  # Uninstall all instances in a bundle\n  timoni bundle delete -f bundle.cue\n\n  # Uninstall all instances in a named bundle\n  timoni bundle delete --name podinfo\n\n  # Uninstall all instances without waiting for finalisation\n  timoni bundle delete -f bundle.cue --wait=false\n\n  # Do a dry-run uninstall and print the changes\n  timoni bundle delete -f bundle.cue --dry-run\n</code></pre>"},{"location":"cmd/timoni_bundle_delete/#options","title":"Options","text":"<pre><code>  -A, --all-namespaces   Delete the requested Bundle across all namespaces.\n      --dry-run          Perform a server-side delete dry run.\n  -f, --file strings     The local path to bundle.cue files.\n  -h, --help             help for delete\n      --name string      Name of the bundle to delete.\n      --wait             Wait for the deleted Kubernetes objects to be finalized. (default true)\n</code></pre>"},{"location":"cmd/timoni_bundle_delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_bundle_delete/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni bundle     - Commands for managing bundles</li> </ul>"},{"location":"cmd/timoni_bundle_lint/","title":"timoni bundle lint","text":""},{"location":"cmd/timoni_bundle_lint/#timoni-bundle-lint","title":"timoni bundle lint","text":"<p>Validate bundle definitions</p>"},{"location":"cmd/timoni_bundle_lint/#synopsis","title":"Synopsis","text":"<p>The bundle lint command validates that a bundle definition conforms with Timoni's schema.'.</p> <pre><code>timoni bundle lint [flags]\n</code></pre>"},{"location":"cmd/timoni_bundle_lint/#examples","title":"Examples","text":"<pre><code>  # Validate a bundle\n  timoni bundle lint -f bundle.cue\n\n  # Validate a bundle defined in multiple files\n  timoni bundle lint \\\n  -f ./bundle.cue \\\n  -f ./bundle_secrets.cue\n</code></pre>"},{"location":"cmd/timoni_bundle_lint/#options","title":"Options","text":"<pre><code>  -f, --file strings      The local path to bundle.cue files.\n  -h, --help              help for lint\n  -p, --package package   The name of the module's package used for building the templates. (default main)\n</code></pre>"},{"location":"cmd/timoni_bundle_lint/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_bundle_lint/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni bundle     - Commands for managing bundles</li> </ul>"},{"location":"cmd/timoni_completion/","title":"timoni completion","text":""},{"location":"cmd/timoni_completion/#timoni-completion","title":"timoni completion","text":"<p>Generates completion scripts for various shells</p>"},{"location":"cmd/timoni_completion/#synopsis","title":"Synopsis","text":"<p>The completion sub-command generates completion scripts for various shells</p>"},{"location":"cmd/timoni_completion/#options","title":"Options","text":"<pre><code>  -h, --help   help for completion\n</code></pre>"},{"location":"cmd/timoni_completion/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_completion/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> <li>timoni completion bash   - Generates bash completion scripts</li> <li>timoni completion fish   - Generates fish completion scripts</li> <li>timoni completion powershell   - Generates powershell completion scripts</li> <li>timoni completion zsh     - Generates zsh completion scripts</li> </ul>"},{"location":"cmd/timoni_completion_bash/","title":"timoni completion bash","text":""},{"location":"cmd/timoni_completion_bash/#timoni-completion-bash","title":"timoni completion bash","text":"<p>Generates bash completion scripts</p> <pre><code>timoni completion bash [flags]\n</code></pre>"},{"location":"cmd/timoni_completion_bash/#examples","title":"Examples","text":"<pre><code>To load completion run\n\n. &lt;(timoni completion bash)\n\nTo configure your bash shell to load completions for each session add to your bashrc\n\n# ~/.bashrc or ~/.profile\ncommand -v timoni &gt;/dev/null &amp;&amp; . &lt;(timoni completion bash)\n</code></pre>"},{"location":"cmd/timoni_completion_bash/#options","title":"Options","text":"<pre><code>  -h, --help   help for bash\n</code></pre>"},{"location":"cmd/timoni_completion_bash/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_completion_bash/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni completion     - Generates completion scripts for various shells</li> </ul>"},{"location":"cmd/timoni_completion_fish/","title":"timoni completion fish","text":""},{"location":"cmd/timoni_completion_fish/#timoni-completion-fish","title":"timoni completion fish","text":"<p>Generates fish completion scripts</p> <pre><code>timoni completion fish [flags]\n</code></pre>"},{"location":"cmd/timoni_completion_fish/#examples","title":"Examples","text":"<pre><code>To configure your fish shell to load completions for each session write this script to your completions dir:\n\ntimoni completion fish &gt; ~/.config/fish/completions/timoni.fish\n\nSee http://fishshell.com/docs/current/index.html#completion-own for more details\n</code></pre>"},{"location":"cmd/timoni_completion_fish/#options","title":"Options","text":"<pre><code>  -h, --help   help for fish\n</code></pre>"},{"location":"cmd/timoni_completion_fish/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_completion_fish/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni completion     - Generates completion scripts for various shells</li> </ul>"},{"location":"cmd/timoni_completion_powershell/","title":"timoni completion powershell","text":""},{"location":"cmd/timoni_completion_powershell/#timoni-completion-powershell","title":"timoni completion powershell","text":"<p>Generates powershell completion scripts</p> <pre><code>timoni completion powershell [flags]\n</code></pre>"},{"location":"cmd/timoni_completion_powershell/#examples","title":"Examples","text":"<pre><code>To load completion run\n\n. &lt;(timoni completion powershell)\n\nTo configure your powershell shell to load completions for each session add to your powershell profile\n\nWindows:\n\ncd \"$env:USERPROFILE\\Documents\\WindowsPowerShell\\Modules\"\ntimoni completion &gt;&gt; timoni-completion.ps1\n\nLinux:\n\ncd \"${XDG_CONFIG_HOME:-\"$HOME/.config/\"}/powershell/modules\"\ntimoni completion &gt;&gt; timoni-completions.ps1\n</code></pre>"},{"location":"cmd/timoni_completion_powershell/#options","title":"Options","text":"<pre><code>  -h, --help   help for powershell\n</code></pre>"},{"location":"cmd/timoni_completion_powershell/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_completion_powershell/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni completion     - Generates completion scripts for various shells</li> </ul>"},{"location":"cmd/timoni_completion_zsh/","title":"timoni completion zsh","text":""},{"location":"cmd/timoni_completion_zsh/#timoni-completion-zsh","title":"timoni completion zsh","text":"<p>Generates zsh completion scripts</p> <pre><code>timoni completion zsh [flags]\n</code></pre>"},{"location":"cmd/timoni_completion_zsh/#examples","title":"Examples","text":"<pre><code>To load completion run\n\n. &lt;(timoni completion zsh) &amp;&amp; compdef _timoni timoni\n\nTo configure your zsh shell to load completions for each session add to your zshrc\n\n# ~/.zshrc or ~/.profile\ncommand -v timoni &gt;/dev/null &amp;&amp; . &lt;(timoni completion zsh) &amp;&amp; compdef _timoni timoni\n\nor write a cached file in one of the completion directories in your ${fpath}:\n\necho \"${fpath// /\\n}\" | grep -i completion\ntimoni completion zsh &gt; _timoni\n\nmv _timoni ~/.oh-my-zsh/completions  # oh-my-zsh\nmv _timoni ~/.zprezto/modules/completion/external/src/  # zprezto\n</code></pre>"},{"location":"cmd/timoni_completion_zsh/#options","title":"Options","text":"<pre><code>  -h, --help   help for zsh\n</code></pre>"},{"location":"cmd/timoni_completion_zsh/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_completion_zsh/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni completion     - Generates completion scripts for various shells</li> </ul>"},{"location":"cmd/timoni_delete/","title":"timoni delete","text":""},{"location":"cmd/timoni_delete/#timoni-delete","title":"timoni delete","text":"<p>Uninstall a module instance from the cluster</p> <pre><code>timoni delete [INSTANCE NAME] [flags]\n</code></pre>"},{"location":"cmd/timoni_delete/#examples","title":"Examples","text":"<pre><code>  # Uninstall the app module from the default namespace\n  timoni -n default delete app\n\n  # Do a dry-run uninstall and print the changes\n  timoni delete --dry-run app\n</code></pre>"},{"location":"cmd/timoni_delete/#options","title":"Options","text":"<pre><code>      --dry-run   Perform a server-side delete dry run.\n  -h, --help      help for delete\n      --wait      Wait for the deleted Kubernetes objects to be finalized. (default true)\n</code></pre>"},{"location":"cmd/timoni_delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_delete/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> </ul>"},{"location":"cmd/timoni_inspect/","title":"timoni inspect","text":""},{"location":"cmd/timoni_inspect/#timoni-inspect","title":"timoni inspect","text":"<p>Commands for getting information about installed instances</p>"},{"location":"cmd/timoni_inspect/#options","title":"Options","text":"<pre><code>  -h, --help   help for inspect\n</code></pre>"},{"location":"cmd/timoni_inspect/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_inspect/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> <li>timoni inspect module     - Print the module information of an instance</li> <li>timoni inspect resources   - Print the Kubernetes objects managed by an instance</li> <li>timoni inspect values     - Print the values of an instance</li> </ul>"},{"location":"cmd/timoni_inspect_module/","title":"timoni inspect module","text":""},{"location":"cmd/timoni_inspect_module/#timoni-inspect-module","title":"timoni inspect module","text":"<p>Print the module information of an instance</p> <pre><code>timoni inspect module [INSTANCE NAME] [flags]\n</code></pre>"},{"location":"cmd/timoni_inspect_module/#examples","title":"Examples","text":"<pre><code>  # Print the module info\n  timoni -n default inspect module app\n</code></pre>"},{"location":"cmd/timoni_inspect_module/#options","title":"Options","text":"<pre><code>  -h, --help   help for module\n</code></pre>"},{"location":"cmd/timoni_inspect_module/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_inspect_module/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni inspect   - Commands for getting information about installed instances</li> </ul>"},{"location":"cmd/timoni_inspect_resources/","title":"timoni inspect resources","text":""},{"location":"cmd/timoni_inspect_resources/#timoni-inspect-resources","title":"timoni inspect resources","text":"<p>Print the Kubernetes objects managed by an instance</p> <pre><code>timoni inspect resources [INSTANCE NAME] [flags]\n</code></pre>"},{"location":"cmd/timoni_inspect_resources/#examples","title":"Examples","text":"<pre><code>  # Print the managed resources\n  timoni -n default inspect resources app\n</code></pre>"},{"location":"cmd/timoni_inspect_resources/#options","title":"Options","text":"<pre><code>  -h, --help   help for resources\n</code></pre>"},{"location":"cmd/timoni_inspect_resources/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_inspect_resources/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni inspect   - Commands for getting information about installed instances</li> </ul>"},{"location":"cmd/timoni_inspect_values/","title":"timoni inspect values","text":""},{"location":"cmd/timoni_inspect_values/#timoni-inspect-values","title":"timoni inspect values","text":"<p>Print the values of an instance</p> <pre><code>timoni inspect values [INSTANCE NAME] [flags]\n</code></pre>"},{"location":"cmd/timoni_inspect_values/#examples","title":"Examples","text":"<pre><code>  # Print the values\n  timoni inspect values app\n\n  # Export the values of an instance to a CUE file\n  timoni -n default inspect values app &gt; values.cue\n</code></pre>"},{"location":"cmd/timoni_inspect_values/#options","title":"Options","text":"<pre><code>  -h, --help   help for values\n</code></pre>"},{"location":"cmd/timoni_inspect_values/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_inspect_values/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni inspect   - Commands for getting information about installed instances</li> </ul>"},{"location":"cmd/timoni_list/","title":"timoni list","text":""},{"location":"cmd/timoni_list/#timoni-list","title":"timoni list","text":"<p>Prints a table of instances and their module version</p> <pre><code>timoni list [flags]\n</code></pre>"},{"location":"cmd/timoni_list/#examples","title":"Examples","text":"<pre><code> # List all instances in a namespace\n  timoni list --namespace default\n\n  # List all instances on a cluster\n  timoni ls -A\n\n  # List all instances on a cluster subject to a certain bundle\n  timoni ls -A --bundle podinfo\n</code></pre>"},{"location":"cmd/timoni_list/#options","title":"Options","text":"<pre><code>  -A, --all-namespaces   List the requested object(s) across all namespaces.\n      --bundle string    List the requested object(s) subject to a certain bundle.\n  -h, --help             help for list\n</code></pre>"},{"location":"cmd/timoni_list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_list/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> </ul>"},{"location":"cmd/timoni_mod/","title":"timoni mod","text":""},{"location":"cmd/timoni_mod/#timoni-mod","title":"timoni mod","text":"<p>Commands for managing modules</p>"},{"location":"cmd/timoni_mod/#options","title":"Options","text":"<pre><code>  -h, --help   help for mod\n</code></pre>"},{"location":"cmd/timoni_mod/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_mod/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> <li>timoni mod init     - Create a module along with common files and directories</li> <li>timoni mod lint     - Validate a local module</li> <li>timoni mod list     - List the versions of a module</li> <li>timoni mod pull     - Pull a module version from a container registry</li> <li>timoni mod push     - Push a module to a container registry</li> </ul>"},{"location":"cmd/timoni_mod_init/","title":"timoni mod init","text":""},{"location":"cmd/timoni_mod_init/#timoni-mod-init","title":"timoni mod init","text":"<p>Create a module along with common files and directories</p> <pre><code>timoni mod init [MODULE NAME] [PATH] [flags]\n</code></pre>"},{"location":"cmd/timoni_mod_init/#examples","title":"Examples","text":"<pre><code>  # create a module in the current directory\n  timoni mod init my-app .\n</code></pre>"},{"location":"cmd/timoni_mod_init/#options","title":"Options","text":"<pre><code>  -h, --help   help for init\n</code></pre>"},{"location":"cmd/timoni_mod_init/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_mod_init/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni mod   - Commands for managing modules</li> </ul>"},{"location":"cmd/timoni_mod_lint/","title":"timoni mod lint","text":""},{"location":"cmd/timoni_mod_lint/#timoni-mod-lint","title":"timoni mod lint","text":"<p>Validate a local module</p>"},{"location":"cmd/timoni_mod_lint/#synopsis","title":"Synopsis","text":"<p>The lint command builds the local module and validates the resulting Kubernetes objects.</p> <pre><code>timoni mod lint [MODULE PATH] [flags]\n</code></pre>"},{"location":"cmd/timoni_mod_lint/#examples","title":"Examples","text":"<pre><code>  # lint a local module\n  timoni mod lint ./path/to/module\n</code></pre>"},{"location":"cmd/timoni_mod_lint/#options","title":"Options","text":"<pre><code>  -h, --help              help for lint\n  -p, --package package   The name of the module's package used for building the templates. (default main)\n</code></pre>"},{"location":"cmd/timoni_mod_lint/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_mod_lint/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni mod   - Commands for managing modules</li> </ul>"},{"location":"cmd/timoni_mod_list/","title":"timoni mod list","text":""},{"location":"cmd/timoni_mod_list/#timoni-mod-list","title":"timoni mod list","text":"<p>List the versions of a module</p>"},{"location":"cmd/timoni_mod_list/#synopsis","title":"Synopsis","text":"<p>The list command prints a table with the module versions and their digests.</p> <pre><code>timoni mod list [MODULE URL] [flags]\n</code></pre>"},{"location":"cmd/timoni_mod_list/#examples","title":"Examples","text":"<pre><code>  # Print the versions of a module\n  timoni mod list oci://docker.io/org/app \n\n  # Print the versions of a module from GitHub Container Registry\n  timoni mod list oci://ghcr.io/org/manifests/app \\\n    --creds timoni:$GITHUB_TOKEN\n</code></pre>"},{"location":"cmd/timoni_mod_list/#options","title":"Options","text":"<pre><code>      --creds creds   The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n  -h, --help          help for list\n</code></pre>"},{"location":"cmd/timoni_mod_list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_mod_list/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni mod   - Commands for managing modules</li> </ul>"},{"location":"cmd/timoni_mod_pull/","title":"timoni mod pull","text":""},{"location":"cmd/timoni_mod_pull/#timoni-mod-pull","title":"timoni mod pull","text":"<p>Pull a module version from a container registry</p>"},{"location":"cmd/timoni_mod_pull/#synopsis","title":"Synopsis","text":"<p>The pull command downloads the module from a container registry and extract its contents the specified directory.</p> <pre><code>timoni mod pull [MODULE URL] [flags]\n</code></pre>"},{"location":"cmd/timoni_mod_pull/#examples","title":"Examples","text":"<pre><code>  # Pull the latest stable version of a module\n  timoni mod pull oci://docker.io/org/app \\\n    --output ./path/to/module\n\n  # Pull a specific module version from GitHub Container Registry\n  timoni mod pull oci://ghcr.io/org/manifests/app --version 1.0.0 \\\n    --output ./path/to/module \\\n    --creds timoni:$GITHUB_TOKEN\n</code></pre>"},{"location":"cmd/timoni_mod_pull/#options","title":"Options","text":"<pre><code>      --creds creds       The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n  -h, --help              help for pull\n  -o, --output string     The directory path where the module content should be extracted.\n  -v, --version version   The version of the module e.g. '1.0.0' or '1.0.0-rc.1'.\n</code></pre>"},{"location":"cmd/timoni_mod_pull/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_mod_pull/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni mod   - Commands for managing modules</li> </ul>"},{"location":"cmd/timoni_mod_push/","title":"timoni mod push","text":""},{"location":"cmd/timoni_mod_push/#timoni-mod-push","title":"timoni mod push","text":"<p>Push a module to a container registry</p>"},{"location":"cmd/timoni_mod_push/#synopsis","title":"Synopsis","text":"<p>The push command packages the module as an OCI artifact and pushes it to the container registry using the version as the image tag.</p> <pre><code>timoni mod push [MODULE PATH] [MODULE URL] [flags]\n</code></pre>"},{"location":"cmd/timoni_mod_push/#examples","title":"Examples","text":"<pre><code>  # Push a module to Docker Hub using the credentials from '~/.docker/config.json'\n  echo $DOCKER_PAT | docker login --username timoni --password-stdin\n  timoni mod push ./path/to/module oci://docker.io/org/app \\\n    --version=1.0.0\n\n  # Push a module to GitHub Container Registry using a GitHub token\n  timoni mod push ./path/to/module oci://ghcr.io/org/modules/app \\\n    --version=1.0.0 \\\n    --creds timoni:$GITHUB_TOKEN\n\n  # Push a release candidate without marking it as the latest stable\n  timoni mod push ./path/to/module oci://docker.io/org/app \\\n    --source=\"$(git config --get remote.origin.url)\" \\\n    --version=2.0.0-rc.1 \\\n    --latest=false\n\n  # Push a module with custom OCI annotations\n  timoni mod push ./path/to/module oci://ghcr.io/org/modules/app \\\n    --version=1.0.0 \\\n    --source='https://github.com/my-org/my-app' \\\n    --annotations='org.opencontainers.image.licenses=Apache-2.0' \\\n    --annotations='org.opencontainers.image.documentation=https://app.org/docs' \\\n    --annotations='org.opencontainers.image.description=A timoni.sh module for my app.'\n</code></pre>"},{"location":"cmd/timoni_mod_push/#options","title":"Options","text":"<pre><code>  -a, --annotations stringArray   Set custom OCI annotations in the format '&lt;key&gt;=&lt;value&gt;'.\n      --creds creds               The credentials for the container registry in the format '&lt;username&gt;[:&lt;password&gt;]'.\n  -h, --help                      help for push\n      --latest                    Tags the current version as the latest stable release. (default true)\n  -o, --output string             The format in which the artifact digest should be printed, can be 'yaml' or 'json'.\n      --source string             The VCS address of the module. When left empty, the Git CLI is used to get the remote origin URL.\n  -v, --version version           The version of the module e.g. '1.0.0' or '1.0.0-rc.1'.\n</code></pre>"},{"location":"cmd/timoni_mod_push/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_mod_push/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni mod   - Commands for managing modules</li> </ul>"},{"location":"cmd/timoni_status/","title":"timoni status","text":""},{"location":"cmd/timoni_status/#timoni-status","title":"timoni status","text":"<p>Displays the current status of Kubernetes resources managed by an instance</p> <pre><code>timoni status [INSTANCE NAME] [flags]\n</code></pre>"},{"location":"cmd/timoni_status/#examples","title":"Examples","text":"<pre><code>  # Show the current status of the managed resources\n  timoni status -n apps app\n</code></pre>"},{"location":"cmd/timoni_status/#options","title":"Options","text":"<pre><code>  -h, --help   help for status\n</code></pre>"},{"location":"cmd/timoni_status/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_status/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> </ul>"},{"location":"cmd/timoni_version/","title":"timoni version","text":""},{"location":"cmd/timoni_version/#timoni-version","title":"timoni version","text":"<p>Print the client and API version information</p> <pre><code>timoni version [flags]\n</code></pre>"},{"location":"cmd/timoni_version/#examples","title":"Examples","text":"<pre><code>timoni version -o yaml\n</code></pre>"},{"location":"cmd/timoni_version/#options","title":"Options","text":"<pre><code>  -h, --help            help for version\n  -o, --output string   The format in which the version information should be printed, can be 'yaml' or 'json' (default \"yaml\")\n</code></pre>"},{"location":"cmd/timoni_version/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --as string                      Username to impersonate for the operation. User could be a regular user or a service account in a namespace.\n      --as-group stringArray           Group to impersonate for the operation, this flag can be repeated to specify multiple groups.\n      --as-uid string                  UID to impersonate for the operation.\n      --cache-dir string               Default cache directory (default \"/home/runner/.kube/cache\")\n      --certificate-authority string   Path to a cert file for the certificate authority\n      --client-certificate string      Path to a client certificate file for TLS\n      --client-key string              Path to a client key file for TLS\n      --cluster string                 The name of the kubeconfig cluster to use\n      --context string                 The name of the kubeconfig context to use\n      --disable-compression            If true, opt-out of response compression for all requests to the server\n      --insecure-skip-tls-verify       If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure\n      --kubeconfig string              Path to the kubeconfig file to use for CLI requests.\n      --log-color                      Adds colorized output to the logs. (defaults to false when no tty)\n      --log-pretty                     Adds timestamps to the logs. (default true)\n  -n, --namespace string               The instance namespace. (default \"default\")\n  -s, --server string                  The address and port of the Kubernetes API server\n      --timeout duration               The length of time to wait before giving up on the current operation. (default 5m0s)\n      --tls-server-name string         Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used\n      --token string                   Bearer token for authentication to the API server\n      --user string                    The name of the kubeconfig user to use\n</code></pre>"},{"location":"cmd/timoni_version/#see-also","title":"SEE ALSO","text":"<ul> <li>timoni   - A package manager for Kubernetes powered by CUE.</li> </ul>"}]}